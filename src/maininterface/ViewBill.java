/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package maininterface;

import utilities.DbUtils;
import mainconnect.ConnectToDatabaseSys;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class ViewBill extends javax.swing.JPanel {

    ArrayList<String> compName = new ArrayList<>();
    ArrayList<String> compID = new ArrayList<>();
    DefaultListModel listModel = new DefaultListModel();
    
    ConnectToDatabaseSys paramDB = new ConnectToDatabaseSys();
    public String dbUrl;
    public String dbDriver;
    public String username;
    public String password;
    public Connection conn;
    
    DbUtils tableUtils = new DbUtils();
    
    public ViewBill() {
        initComponents();
        listCompany.setModel(listModel);
    }
    
    public void getList()
    {
        final String tempQuery = "SELECT compid,compname from company order by compname";
        
        listModel.clear();
        compName.clear();
        compID.clear();
        
        Statement stmt = null;       
        this.connect();
        conn = this.getConnection();
        
        try
        {
            stmt = conn.createStatement();
        }
                
        catch (SQLException e)
        {
            e.printStackTrace();
        }
		
        ResultSet rs;
        try
        {
            rs = stmt.executeQuery(tempQuery);
            String tempID = "";
            while(rs.next())
            {                
                compName.add(rs.getString("compname"));
                tempID = rs.getString("compid");
                compID.add(tempID);
                listModel.addElement(rs.getString("compname"));
            }
        this.disconnect();      
        }
        catch (SQLException e)
        {
        
        }
    }
    
    public void connect()
    {
        dbDriver = paramDB.getDbClass();
        dbUrl = paramDB.getDbUrl();
        password = paramDB.getPassword(); // CHANGE PASSWORD
        username = paramDB.getName();
                
        try
        {
            Class.forName(dbDriver).newInstance();
            conn = DriverManager.getConnection(dbUrl,username,password);
        }
        catch(ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException e)
        {
            e.printStackTrace();
        }
    }
	
    public Connection getConnection()
    {
	return conn;
    }
	
    public void disconnect()
    {
       try
       {
            conn.close();
       } 
       catch (Exception ex)
       {
       }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCompany = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listHeader = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDetails = new javax.swing.JTable();
        textPayment = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Company"));

        listCompany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCompanyMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listCompany);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill Information Header"));

        listHeader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PROCESS DATE", "START DATE", "END DATE", "BILL DATE", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listHeader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listHeaderMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listHeader);
        listHeader.getColumnModel().getColumn(0).setPreferredWidth(10);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill Details"));

        listDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NAME", "CONTRIBUTION", "CASH", "REG", "CALAMITY", "EDUC", "EMER", "GOODS", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(listDetails);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
        );

        textPayment.setBackground(new java.awt.Color(0, 0, 0));
        textPayment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        textPayment.setForeground(new java.awt.Color(0, 204, 0));
        textPayment.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textPayment.setText("0");
        textPayment.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Total Payment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(textPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listCompanyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCompanyMouseClicked

        try
        {
            try
            {

                int select = listCompany.getSelectedIndex();
                listCompany.setSelectedIndex(select);
                String compid = compID.get(select);
                String tempQuery = "select billid,processdt,startdt,enddt,billdt,billamt from bill_hdr where compid='"+compid+"'";
               // System.out.println(tempQuery);
                Statement stmt = null;       
                this.connect();
                conn = this.getConnection();
                
                try
                {
                    stmt = conn.createStatement();
                }
                
                catch(SQLException e)
                {
                    e.printStackTrace();
                }
        
                ResultSet rs;
	
                try
                {
                    rs = stmt.executeQuery(tempQuery);
                    try
                    {
                        tableUtils.updateTableModelData((DefaultTableModel) listHeader.getModel(), rs, 6);
                    } 
                    catch (Exception ex)
                    {
                        Logger.getLogger(ViewMember.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
        
                catch (SQLException e)
                {
                    e.printStackTrace();
                }
                finally
                {
                    this.disconnect();
                }
            }
        
            catch(Exception e)
            {
                DefaultTableModel model = (DefaultTableModel) listHeader.getModel();
                model.removeRow(model.getRowCount()-1);
            }
        }
        catch(Exception o)
        {
            
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_listCompanyMouseClicked

    public void getListDetails(String id)
    {
        float total = 0;
        float totalInterest = 0;
        try
        {
            String tempQuery = "select membername,contribution,cash_amount,reg_amount,calamity_amount,educ_amount,emer_amount,goods_amount,mem_total from bill_dtl where billid='"+id+"'";
        
            Statement stmt = null;       
            this.connect();
            conn = this.getConnection();
                
            try
            {
                stmt = conn.createStatement();
            }
                
            catch (SQLException e)
            {
                e.printStackTrace();
            }
		
            ResultSet rs;
            ResultSet ps;
            try
            {
                rs = stmt.executeQuery(tempQuery);
                
                try
                {                    
                    tableUtils.updateTableModelData((DefaultTableModel) listDetails.getModel(), rs, 9);
                }
                catch (Exception ex)
                {
                    Logger.getLogger(ViewMember.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            catch(Exception e)
            {
            
            }
            
            try
            {
                ps = stmt.executeQuery(tempQuery);
                
                while(ps.next())
                {
                    total += ps.getFloat("mem_total");
                    textPayment.setText(String.valueOf(total));
                }
            }
            catch(Exception e)
            {
                
            }
            
            finally
            {
                this.disconnect();
            }
        }
        
        catch(Exception e)
        {
            
        }
    }
    
    private void listHeaderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listHeaderMouseClicked

        try
        {
            int index = listHeader.getSelectedRow();
            String i = listHeader.getValueAt(index, 0).toString();
            this.getListDetails(i);
        }
        catch(Exception o)
        {
            DefaultTableModel model = (DefaultTableModel) listHeader.getModel();
            model.removeRow(model.getRowCount()-1);
        }
                
        // TODO add your handling code here:
    }//GEN-LAST:event_listHeaderMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList listCompany;
    private javax.swing.JTable listDetails;
    private javax.swing.JTable listHeader;
    private javax.swing.JTextField textPayment;
    // End of variables declaration//GEN-END:variables
}
