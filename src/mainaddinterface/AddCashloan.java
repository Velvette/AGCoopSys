/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mainaddinterface;

import utilities.QueryWarehouse;
import mainprocesses.LoanDetailCalculate;
import mainconnect.ConnectToDatabaseSys;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class AddCashloan extends javax.swing.JFrame {

    Date enddt;
    Date currentDate;
    DateFormat df;
    
    public String dbUrl;
    public String dbDriver;
    public String username;
    public String password;
    public Connection conn;
    ConnectToDatabaseSys paramDB = new ConnectToDatabaseSys();
    
        
    float principal = 0;
    float interest = 0;
    float interestrt = 0;
    float totalPayment = 0;
    float totInterest = 0;
    String finalEndString = "";
    String checkNo = "";
    String currentdtString = "";
    int loanID;
    LoanDetailCalculate loanCalculate = new LoanDetailCalculate();
    
    String memberID;
    
    int choice = 0;
    
    public AddCashloan() {
        initComponents();
        this.df = new SimpleDateFormat("yyyy-MM-dd");
        df.setLenient(false);
    }
    
    public void addLoan(String wholeName,String id)
    {
        memberID = id;
        labelMember.setText(wholeName);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMember = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textInterest = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        textPrincipal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textEndDate = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        labelTotalPayment = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelTotalInterest = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        labelTotalPrincipal = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        buttonConfirm = new javax.swing.JButton();
        buttonCompute = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        textCheckNo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelMember.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Member");

        jLabel8.setText("Interest Rate");

        jLabel4.setText("Principal");

        textPrincipal.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textPrincipalCaretUpdate(evt);
            }
        });

        jLabel7.setText("Bill Date");

        jLabel9.setText("Total Payment");

        labelTotalPayment.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setText("Total Interest");

        labelTotalInterest.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("Total Principal");

        labelTotalPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonConfirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/confirm.png"))); // NOI18N
        buttonConfirm.setToolTipText("Confirm");
        buttonConfirm.setEnabled(false);
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        buttonCompute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/generate.png"))); // NOI18N
        buttonCompute.setToolTipText("Compute");
        buttonCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonComputeActionPerformed(evt);
            }
        });

        buttonClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eraser.png"))); // NOI18N
        buttonClear.setToolTipText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelIcon.png"))); // NOI18N
        buttonCancel.setToolTipText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        jLabel12.setText("Check No");

        textCheckNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCheckNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                            .addComponent(textEndDate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textInterest)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCompute, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTotalPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTotalInterest, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(labelTotalPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22)
                        .addComponent(labelMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textCheckNo, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMember, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textCheckNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textInterest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTotalPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTotalInterest, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTotalPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonClear)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonCompute)
                        .addComponent(buttonCancel))
                    .addComponent(buttonConfirm))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textPrincipalCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_textPrincipalCaretUpdate

        //EVENT
        // TODO add your handling code here:
    }//GEN-LAST:event_textPrincipalCaretUpdate

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed

        if(paramDB.checkDuplicateLoan(memberID,"A"))
        {
           this.firstBreakCommit();
        }
        else
            JOptionPane.showMessageDialog(null, "Error: Current loan exists", "Error", JOptionPane.ERROR_MESSAGE);
        buttonConfirm.setEnabled(false);
        buttonCompute.setEnabled(true);
        loanCalculate.reset();
    }//GEN-LAST:event_buttonConfirmActionPerformed

    private void buttonComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonComputeActionPerformed

        String errorMessage = "";
        boolean error = true;

        try
        {
            loanCalculate.setMonthlyInterest(Float.parseFloat(textInterest.getText()));
        }
        catch(Exception e)
        {
            error = false;
        }
        try{
            loanCalculate.setPrincipalBalance(Float.parseFloat(textPrincipal.getText()));
        }
        catch(Exception r)
        {
            error = false;
        }
        
        loanCalculate.setTotalNumberOfPayment(1);


        Date grantdt = new Date();
        currentDate = grantdt;

        if(error)
        {
            principal = Float.parseFloat(textPrincipal.getText());
            interest = loanCalculate.getInterest();
            interestrt = Float.parseFloat(textInterest.getText());
            totalPayment = loanCalculate.getCashloan();
            totInterest = totalPayment - principal;
            labelTotalPayment.setText(Float.toString(totalPayment));
            labelTotalInterest.setText(Float.toString(totInterest));
            labelTotalPrincipal.setText(Float.toString(principal));
            checkNo = textCheckNo.getText();
            currentdtString = df.format(currentDate);

            if(textEndDate.getText().length() != 0)
            {
                String dateToFormatEnd = textEndDate.getText();
                try
                {
                    enddt = df.parse(dateToFormatEnd);
                    finalEndString = df.format(enddt);
                }
                catch (ParseException ex)
                {
                    Logger.getLogger(AddCashloan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            buttonConfirm.setEnabled(true);
            buttonCompute.setEnabled(false);
        }
    }//GEN-LAST:event_buttonComputeActionPerformed

    public void initEnd(String startd) throws ParseException
    {
           Date start = df.parse(startd);
           String sStart = df.format(start);
           textEndDate.setText(sStart);
    }
    
    public void editLoan(String wholeName,  String id)
    {
        ResultSet rs;
        this.connect();
        Statement stmt = null;
        String query = "select * from cashloan where loanid="+id;
        loanID = Integer.parseInt(id);
        try
        {
            stmt = conn.createStatement();
        }
                
	catch (SQLException e)
        {
            e.printStackTrace();
        }
        String tempStart = "";
        String tempEnd = "";
        String type = "";
        labelMember.setText(wholeName);
        try
        {
            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                textInterest.setText(rs.getString("interestrt"));
                textPrincipal. setText(rs.getString("loanamt"));
                textCheckNo.setText(rs.getString("checkno"));
                type = rs.getString("loantype");
                memberID = rs.getString("memberid");
                tempStart = rs.getString("billingdt");
            }
            
	}
        
        catch (SQLException e)
        {
	}   
        finally{
            this.disconnect();
        }
        choice = 1;
        try
        {
            this.initEnd(tempStart);
        }
        catch(Exception e)
        {
            
        }
    }
        
    public void firstBreakCommit()
    {
            QueryWarehouse bank = new QueryWarehouse();
            String query = "";
            
            //QUERY FOR CASHLOAN
            if(choice == 0) {
                query = bank.loanCashloan(memberID, currentdtString, finalEndString, principal, interestrt, totInterest, totalPayment, checkNo);
            }
            else if(choice == 1) {
                query = bank.editLoanCashloan(memberID, currentdtString, currentdtString, principal, interestrt, totInterest, totalPayment, checkNo, loanID);
            }
                
            this.connect();
            Statement stmt = null;
        
            try
            {
                stmt = conn.createStatement();
            }
            catch(Exception e)
            {
            
            }
        
            try
            {
                stmt.executeQuery(query);
                JOptionPane.showMessageDialog(null, "Database Update: Success", "Updating database", JOptionPane.INFORMATION_MESSAGE);
            }
            catch (SQLException ex)
            {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error: Database not updated", "Error", JOptionPane.ERROR_MESSAGE); 
            }
        
            finally{
                this.disconnect();
            }
    }
        
    public void allReset()
    {
        textInterest.setText("");
        textPrincipal.setText("");
        textEndDate.setText("");
        textEndDate.setEnabled(true);        
        labelTotalPayment.setText("");
        labelTotalInterest.setText("");
        labelTotalPrincipal.setText("");
               
        buttonCompute.setEnabled(true);
        buttonConfirm.setEnabled(false);
        labelMember.setText("");
         
        loanCalculate.reset();
    }
    
    public void connect()
    {
        dbDriver = paramDB.getDbClass();
        dbUrl = paramDB.getDbUrl();
        password = paramDB.getPassword(); // CHANGE PASSWORD
        username = paramDB.getName();
                
        try
        {
            Class.forName(dbDriver).newInstance();
            conn = DriverManager.getConnection(dbUrl,username,password);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
        
    public Connection getConnection()
    {
	return conn;
    }
	
    public void disconnect()
    {
       try
       {
            conn.close();
       } 
       catch (Exception ex)
       {
            ex.printStackTrace();
       }
    }
            
    
    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed

        this.allReset();
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void textCheckNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCheckNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCheckNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCashloan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCashloan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCashloan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCashloan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCashloan().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonCompute;
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labelMember;
    private javax.swing.JLabel labelTotalInterest;
    private javax.swing.JLabel labelTotalPayment;
    private javax.swing.JLabel labelTotalPrincipal;
    private javax.swing.JTextField textCheckNo;
    private javax.swing.JTextField textEndDate;
    private javax.swing.JTextField textInterest;
    private javax.swing.JTextField textPrincipal;
    // End of variables declaration//GEN-END:variables
}
