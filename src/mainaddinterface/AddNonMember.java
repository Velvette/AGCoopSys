/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mainaddinterface;

import agcoopsys.companyList;
import utilities.ValidateInputs;
import maininterface.ViewNonMember;
import mainconnect.ConnectToDatabaseSys;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Lenovo
 */
public class AddNonMember extends javax.swing.JFrame {

    private String memberFirstName;
    private String memberLastName;
    private String memberMiddleName;
    private String memberAddress1;
    private String memberAddress2 = "";
    private String memberAddress3 = "";
    private String memberContact1;
    private String memberContact2;
    private String memberEmail;
    private String memberRemarks;
    private String companyIDText;
    ValidateInputs validateInputs = new ValidateInputs();
    private int companyID;
    int choice = 0;
    private int memberID;
    
    public String dbUrl;
    public String dbDriver;
    public String username;
    public String password;
    public Connection conn;
    ArrayList<Integer> arrayList = new ArrayList<>();
    ArrayList<String> arrayListCompany = new ArrayList<>();
    
    ConnectToDatabaseSys paramDB = new ConnectToDatabaseSys();
    
    public AddNonMember() {
        initComponents();
        this.returnParams();
    }
    
   public void setCompanyIDText(String companyIDText) {
        this.companyIDText = (String) comboCompany.getSelectedItem();
    }
    
    public void setMemberAddress1() {
        this.memberAddress1 = textMemAd1.getText();
    }

    public void setMemberAddress2() {
        this.memberAddress2 = textMemAd2.getText();
    }

    public void setMemberAddress3() {
        this.memberAddress3 = textMemAd3.getText();
    }

    public void setMemberContact1() {
        this.memberContact1 = textMemCon1.getText();
    }

    public void setMemberContact2() {
        this.memberContact2 = textMemCon2.getText();
    }

    public void setMemberEmail() {
        this.memberEmail = textMemEmail.getText();
    }

    public void setMemberFirstName() {
        this.memberFirstName = textFirstName.getText();
    }


    public void setMemberLastName() {
        this.memberLastName = textLastName.getText();
    }

    public void setMemberMiddleName() {
        this.memberMiddleName = textMidInit.getText();
    }

    public void setMemberRemarks() {
        this.memberRemarks = textRemark.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboCompany = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFirstName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textMidInit = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textLastName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        textMemAd3 = new javax.swing.JTextField();
        textMemAd2 = new javax.swing.JTextField();
        textMemAd1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textMemEmail = new javax.swing.JTextField();
        textMemCon2 = new javax.swing.JTextField();
        textMemCon1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textRemark = new javax.swing.JTextArea();
        buttonConfirm = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Company");

        jLabel3.setText("First name");

        jLabel4.setText("Middle Initial");

        jLabel5.setText("Last name");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));

        textMemAd3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMemAd3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textMemAd3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textMemAd2)
                    .addComponent(textMemAd1)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(textMemAd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textMemAd2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textMemAd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setText("Contact No. 1");

        jLabel10.setText("Contact No. 2");

        jLabel11.setText("E-mail");

        jLabel18.setText("Remarks");

        textRemark.setColumns(20);
        textRemark.setRows(5);
        jScrollPane1.setViewportView(textRemark);

        buttonConfirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/confirm.png"))); // NOI18N
        buttonConfirm.setToolTipText("Confirm");
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        buttonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelIcon.png"))); // NOI18N
        buttonCancel.setToolTipText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eraser.png"))); // NOI18N
        buttonClear.setToolTipText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(textMidInit, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(textFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(comboCompany, javax.swing.GroupLayout.Alignment.TRAILING, 0, 275, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textMemEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textMemCon1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textMemCon2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1))
                    .addContainerGap(306, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(textFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textMidInit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(textMemCon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textMemCon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textMemEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel)
                    .addComponent(buttonClear)
                    .addComponent(buttonConfirm))
                .addGap(0, 9, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(21, 21, 21)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel5)
                    .addGap(151, 151, 151)
                    .addComponent(jLabel9)
                    .addContainerGap(314, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textMemAd3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMemAd3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMemAd3ActionPerformed

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed

        this.setMemberAddress1();
        this.setMemberAddress2();
        this.setMemberAddress3();
        this.setMemberContact1();
        this.setMemberContact2();
        this.setMemberEmail();
        this.setMemberFirstName();
        this.setMemberLastName();
        this.setMemberMiddleName();
        this.setMemberRemarks();
        this.checkInputMember();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonConfirmActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed

        this.reset();
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelActionPerformed

    public void clearCombo()
    {
        comboCompany.removeAllItems();
        arrayList.clear();
        arrayListCompany.clear();
        this.returnParams();
    }
    
    public void checkInputEditMember(String id)
    {
        ResultSet rs;
        this.connect();
        Statement stmt = null;
        String query = "select * from nonmember where memberid="+id;
        
        try
        {
            stmt = conn.createStatement();
        }
                
	catch (SQLException e)
        {
            e.printStackTrace();
        }

        try
        {
            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                textFirstName.setText(rs.getString("firstname"));
                textLastName.setText(rs.getString("lastname"));
                textMidInit.setText(rs.getString("midinit"));
                textMemAd1.setText(rs.getString("address1"));
                textMemAd2.setText(rs.getString("address2"));
                textMemAd3.setText(rs.getString("address3"));
                textMemCon1.setText(rs.getString("contactno1"));
                textMemCon2.setText(rs.getString("contactno2"));
                textMemEmail.setText(rs.getString("email"));
                this.initComboEdit(rs.getInt("compid"));
                textRemark.setText(rs.getString("remarks"));
                memberID = rs.getInt("memberid");
            }
            this.disconnect();      
	}
        
        catch (SQLException e)
        {
            
	}   
        choice = 1;
    }
    
        public void initComboEdit(int memid)
    {
        for(int i = 0; i<arrayList.size(); i++)
        {
            //System.out.println(memid +" : "+ arrayList.get(i));;
            if(memid == arrayList.get(i))
            {
                comboCompany.setSelectedItem(arrayListCompany.get(i));
            }
        }
    }
        
    public void passThrough()
    {
        choice = 0;
    }
        
    public void checkInputMember()
    {
        String errorMessages = "";
        int errorCount = 0;
        //FORMAT
        memberFirstName = validateInputs.formatStringSpaces(memberFirstName);
        memberLastName = validateInputs.formatStringSpaces(memberLastName);
        memberMiddleName = validateInputs.formatStringSpaces(memberMiddleName);
        memberAddress1 = validateInputs.formatStringSpaces(memberAddress1);
        memberAddress2 = validateInputs.formatStringSpaces(memberAddress2);
        memberAddress3 = validateInputs.formatStringSpaces(memberAddress3);
        memberRemarks = validateInputs.formatStringSpaces(memberRemarks);     
        
        
        //CHECK
        if(!(validateInputs.checkForSpecial(memberFirstName)))
        {
            errorMessages += "First Name: Field cannot contain special characters\n";
            errorCount++;
        }
        
        if(!(validateInputs.checkForSpecial(memberLastName)))
        {
            errorMessages += "Last Name: Field cannot contain special characters\n";
            errorCount++;
        }
        
        if(!(validateInputs.checkIfMiddleInitial(memberMiddleName)))
        {
            errorMessages += "Middle Initial: Should not contain special characters and could contain 1-2 characters\n";
            errorCount++;
        }
        
        if(!(validateInputs.checkIfEmpty(memberFirstName)))
        {
            errorMessages += "First Name: Field cannot be empty\n";
            errorCount++;
        }
        
        if(!(validateInputs.checkIfEmpty(memberLastName)))
        {
            errorMessages += "Last Name: Field cannot be empty\n";
            errorCount++;
        }
        
        if(!(validateInputs.checkIfEmpty(memberMiddleName)))
        {
            errorMessages += "Middle Initial: Field cannot be empty\n";
            errorCount++;
        }
        
        try
        {
            companyID = this.getCompanyIdCombo(comboCompany.getSelectedIndex());
        }
        
        catch(Exception m)
        {
            errorMessages += "Company: No company selected\n";
            errorCount++;
        }
        
        if(errorCount == 0)
        {
            String query = "";
            if(choice == 0)
            {
                query = "insert into nonmember (firstname,midinit,lastname,address1,address2,address3,contactno1,contactno2,email,compid,remarks)"
                    + " values " + "('" + memberFirstName + "','" + memberMiddleName + "','" + memberLastName + "','" + memberAddress1 + "','" + memberAddress2 +"','"+ memberAddress3
                    +"','"+ memberContact1 + "','"+ memberContact2 + "','"+memberEmail+"','"+ companyID +"','"+memberRemarks+"')";
            }
            if(choice == 1)
            {
                query = "update nonmember set firstname='"+memberFirstName+"',midinit='"+memberMiddleName+"',lastname='"+memberLastName+"',address1='"+memberAddress1+"',address2='"+memberAddress2+"',address3='"+memberAddress3+"',contactno1='"+
                        memberContact1+"',contactno2='"+memberContact2+"',email='"+memberEmail+"',compid='"+companyID+"',remarks='"+memberRemarks+"' where memberid="+memberID;
            }
            //System.out.println(query);
            ConnectToDatabaseSys connectDB = new ConnectToDatabaseSys();
            connectDB.accessInputDatabase(query);
            ViewNonMember vM = new ViewNonMember();
            vM.getList(0,"");
        }
        else if(errorCount>0)
        {
            //System.out.println(errorMessages);
            JOptionPane.showMessageDialog(null, errorMessages, "Error: Member Information", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }
    
    public int getCompanyIdCombo(int comboID)
    {
        int companyID = 0;
        companyID = arrayList.get(comboID);
        return companyID;
    }
        
    
    
    public void connect()
    {
        dbDriver = paramDB.getDbClass();
        dbUrl = paramDB.getDbUrl();
        password = paramDB.getPassword(); // CHANGE PASSWORD
        username = paramDB.getName();
                
        try
        {
            Class.forName(dbDriver).newInstance();
            conn = DriverManager.getConnection(dbUrl,username,password);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
        
    public Connection getConnection()
    {
	return conn;
    }
	
    public void disconnect()
    {
       try
       {
            conn.close();
       } 
       catch (Exception ex)
       {
            ex.printStackTrace();
       }
    }
    
    public void returnParams()
    {        
        final String query = "select compid, compname from company order by compname";
        
        ResultSet rs;
        this.connect();
        Statement stmt = null;
        
        try
        {
            stmt = conn.createStatement();
        }
                
	catch (SQLException e)
        {
            e.printStackTrace();
        }
        
        try
        {
            companyList compList = new companyList();
            rs = stmt.executeQuery(query);
            int index = 0;
            while(rs.next())
            {
                comboCompany.addItem(rs.getString("compname"));
                //System.out.println(rs.getInt("compid") + " : " + rs.getString("compname"));
                arrayList.add(rs.getInt("compid"));
                arrayListCompany.add(rs.getString("compname"));
            }
            this.disconnect();      
	}
        
        catch (SQLException e)
        {
            e.printStackTrace();
	}   
    }
    
    public void reset()
    {
        
        comboCompany.setSelectedIndex(0);
        textFirstName.setText("");
        textLastName.setText("");
        textMidInit.setText("");
        textMemAd1.setText("");
        textMemAd2.setText("");
        textMemAd3.setText("");
        textMemCon1.setText("");
        textMemCon2.setText("");
        textMemEmail.setText("");
        textRemark.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNonMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNonMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNonMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNonMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNonMember().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JComboBox comboCompany;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textFirstName;
    private javax.swing.JTextField textLastName;
    private javax.swing.JTextField textMemAd1;
    private javax.swing.JTextField textMemAd2;
    private javax.swing.JTextField textMemAd3;
    private javax.swing.JTextField textMemCon1;
    private javax.swing.JTextField textMemCon2;
    private javax.swing.JTextField textMemEmail;
    private javax.swing.JTextField textMidInit;
    private javax.swing.JTextArea textRemark;
    // End of variables declaration//GEN-END:variables
}
