/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package agcoopsys;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Lenovo
 */
public class addLoan extends javax.swing.JFrame {

    public String dbUrl;
    public String dbDriver;
    public String username;
    public String password;
    public Connection conn;
    ConnectToDatabaseSys paramDB = new ConnectToDatabaseSys();
    float monthlyAmortization;
    
    String memberID;
    String loanType;
    Date startdt;
    Date enddt;
    Date currentDate;
    DateFormat df;
    DateFormat df2;
    String startdtString = "";
    String enddtString = "";
    String currentdtString = "";
    float principal = 0;
    float interest = 0;
    float interestrt = 0;
    float totalPayment = 0;
    int terms  = 0;
    int loanID;
    Date tempCal;
    String checkNo = "";
    loanDetailCalculate loanCalculate = new loanDetailCalculate();
    
    public addLoan() {
        initComponents();
        this.df = new SimpleDateFormat("yyyy-MM-dd");
        df.setLenient(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelMember = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboTypeOfLoan = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        textPrincipal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textTerms = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textStartDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textEndDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textInterest = new javax.swing.JTextField();
        buttonConfirm = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        labelAmortization = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        labelTotalPayment = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelTotalInterest = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        labelTotalPrincipal = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        buttonCancel = new javax.swing.JButton();
        buttonCompute = new javax.swing.JButton();
        textCheckNo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Member");

        labelMember.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Type");

        comboTypeOfLoan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Regular", "Calamity", "Educational", "Emergency", "Cashloan" }));
        comboTypeOfLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTypeOfLoanActionPerformed(evt);
            }
        });

        jLabel4.setText("Principal");

        textPrincipal.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textPrincipalCaretUpdate(evt);
            }
        });

        jLabel5.setText("Terms (Months)");

        jLabel6.setText("Start Date");

        textStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textStartDateActionPerformed(evt);
            }
        });

        jLabel7.setText("End Date");

        textEndDate.setEditable(false);

        jLabel8.setText("Interest Rate");

        buttonConfirm.setText("Confirm");
        buttonConfirm.setEnabled(false);
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        jLabel2.setText("Monthly Amortization");

        labelAmortization.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("Total Payment");

        labelTotalPayment.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setText("Total Interest");

        labelTotalInterest.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("Total Principal");

        labelTotalPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonCompute.setText("Compute");
        buttonCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonComputeActionPerformed(evt);
            }
        });

        jLabel12.setText("Check No");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(comboTypeOfLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textCheckNo)
                                    .addComponent(textInterest, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(buttonCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonCompute)
                                .addGap(18, 18, 18)
                                .addComponent(buttonConfirm))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelAmortization, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTotalPayment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTotalInterest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTotalPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textTerms, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textStartDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMember, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboTypeOfLoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(textInterest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textCheckNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textTerms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAmortization, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(labelTotalPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(labelTotalInterest, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(labelTotalPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonConfirm)
                    .addComponent(buttonCancel)
                    .addComponent(buttonCompute))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textPrincipalCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_textPrincipalCaretUpdate

        //EVENT
        // TODO add your handling code here:
    }//GEN-LAST:event_textPrincipalCaretUpdate

    private void textStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textStartDateActionPerformed
       public void connect()
    {
        dbDriver = paramDB.getDbClass();
        dbUrl = paramDB.getDbUrl();
        password = paramDB.getPassword(); // CHANGE PASSWORD
        username = paramDB.getName();
                
        try
        {
            Class.forName(dbDriver).newInstance();
            conn = DriverManager.getConnection(dbUrl,username,password);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
        
    public Connection getConnection()
    {
	return conn;
    }
	
    public void disconnect()
    {
       try
       {
            conn.close();
       } 
       catch (Exception ex)
       {
            ex.printStackTrace();
       }
    }
    
        
    public void addLoan(String id)
    {
        ResultSet rs;
        String wholeName = "";
        this.connect();
        Statement stmt = null;
        String query = "select * from member where memberid="+id;
        memberID = id;
        try
        {
            stmt = conn.createStatement();
        }
                
	catch (SQLException e)
        {
            e.printStackTrace();
        }

        try
        {
            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                wholeName = rs.getString("lastname") + ", " + rs.getString("firstname") + " " + rs.getString("midinit"); 
            }
        }
       
        catch (SQLException e)
        {
	}
        
        labelMember.setText(wholeName);
    }
    
    private void buttonComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonComputeActionPerformed
        
        String errorMessage = "";
        boolean error = true;

        
        try
        {
            loanCalculate.setMonthlyInterest(Float.parseFloat(textInterest.getText())); 
        }
        catch(Exception e)
        {
            System.out.println("error");
            error = false;
        }
        try{
            loanCalculate.setPrincipalBalance(Float.parseFloat(textPrincipal.getText()));
        }
        catch(Exception r)
        {
            error = false;
        }
        try
        {
           loanCalculate.setTotalNumberOfPayment(Integer.parseInt(textTerms.getText())); 
        }
        catch(Exception t)
        {
            error = false;
        }
        
        if(error)
        {
           loanCalculate.getAmortization();
           principal = Float.parseFloat(textPrincipal.getText());
           monthlyAmortization = loanCalculate.getMonthlyPayment();
           interest = loanCalculate.getInterest();
           interestrt = Float.parseFloat(textInterest.getText());
           totalPayment = loanCalculate.getTotAmortization();
           terms = Integer.parseInt(textTerms.getText());
           checkNo = textCheckNo.getText();
           labelAmortization.setText(Float.toString(monthlyAmortization));
           labelTotalPayment.setText(Float.toString(totalPayment));
           labelTotalInterest.setText(Float.toString(loanCalculate.getTotInterest()));
           labelTotalPrincipal.setText(Float.toString(principal));
           Date grantdt = new Date();
           currentDate = grantdt;
           loanType = comboTypeOfLoan.getSelectedItem().toString();
            
           switch (loanType) {
                case "Regular":
                    loanType = "R";
                    break;
                case "Calamity":
                    loanType = "C";
                    break;
                case "Educational":
                    loanType = "E";
                    break;
                case "Emergency":
                    loanType = "M";
                    break;
            }
           
           if(textStartDate.getText().length() != 0)
           {
            try
            {  
                startdt = (Date) df.parse(textStartDate.getText());
                tempCal = (Date) df.parse(textStartDate.getText());
                
                Calendar cal = Calendar.getInstance();
                cal.setTime(startdt);
                
                cal.set(Calendar.MONTH, (cal.get(Calendar.MONTH)+ Integer.parseInt(textTerms.getText())-1));
                
                enddt = cal.getTime();
                startdtString = df.format(startdt);
                enddtString = df.format(enddt);
                currentdtString = df.format(currentDate);
                textEndDate.setText(enddtString);
                
                //System.out.println(loanType);
                //System.out.println("current:" + startdtString + " ||| " + "end: " + enddtString);
            } 
            catch (ParseException | NumberFormatException q)
            { 
                
            }
            
           }
           buttonConfirm.setEnabled(true);
           buttonCompute.setEnabled(false);
           
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonComputeActionPerformed

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed

        if(paramDB.checkDuplicateLoan(memberID,loanType))
        {
            this.firstBreakCommit();
            this.secondBreakCommit();
        }
        else
            JOptionPane.showMessageDialog(null, "Error: Current type of loan exists", "Error", JOptionPane.ERROR_MESSAGE); 
                
        buttonConfirm.setEnabled(false);
        buttonCompute.setEnabled(true);
        loanCalculate.reset();
    }//GEN-LAST:event_buttonConfirmActionPerformed

    private void comboTypeOfLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTypeOfLoanActionPerformed

        if(comboTypeOfLoan.getSelectedItem().equals("Cashloan"))
        {
            textTerms.setEditable(false);
        }
        else
            textTerms.setEditable(true);
        
    }//GEN-LAST:event_comboTypeOfLoanActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelActionPerformed

    public void firstBreakCommit()
    {
       String query = "insert into loan_hdr (memberid, loantype, grantdt,startdt,enddt,loanamt,montopay,interestrt, interestamt,payableamt,balance,amortization,checkno)"
                + "values('"+memberID+"','"+loanType+"','"+currentdtString+"','"+startdtString+"','"+enddtString+"','"+principal+"','"+terms+
                "','"+interestrt+"','"+interest+"','"+totalPayment+"','"+totalPayment+"','"+monthlyAmortization+"','"+checkNo+"')";
       
        //System.out.println(query);
        this.connect();
        Statement stmt = null;
        
        try
        {
            stmt = conn.createStatement();
        }
        catch(Exception e)
        {
            
        }
        
        try
        {
            stmt.addBatch(query);
            stmt.executeBatch();
        }
        catch (SQLException ex)
        {
            
        }
        
        finally{
            this.disconnect();
        }
    }
    
    public void secondBreakCommit()
    {
        this.getID();
        Date repEnd;
        repEnd = startdt;
        float arrayInterest[] = new float[terms];
        arrayInterest = loanCalculate.getInterestRecur(terms, principal);
        this.getInsertAmortDates(repEnd, terms, arrayInterest, loanID, monthlyAmortization);
    }
    
    
    public void getInsertAmortDates(Date repEnd, int terms, float[] arrayInterest, int loanID, float monthlyAmortization)
    {
        DateFormat df;
        df = new SimpleDateFormat("yyyy-MM-dd");
        df.setLenient(false);
        String repEndString = "";
        String insertString = "";
        Calendar calendar = Calendar.getInstance();
        Statement stmt = null;
        
        try
        {
             stmt = conn.createStatement();
        }
        catch(Exception e)
        {
            
        }
        
        this.connect();
        try
        {           
            for(int i=0; i<terms;i++)
            {
                repEndString = df.format(repEnd);
                //System.out.println(repEndString);
                calendar.setTime(repEnd);
                insertString = "insert into loan_dtl (loanid,amordate,mon_amort,mon_interest) values ('"+loanID+"','"+repEndString+"','"+monthlyAmortization+"','"+arrayInterest[i]+"')";
                
                stmt.addBatch(insertString);
                calendar.add(Calendar.MONTH, 1);
                repEnd = calendar.getTime();
            }
            stmt.executeBatch();
            JOptionPane.showMessageDialog(null, "Database Update: Success", "Updating database", JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception o)
        {
            JOptionPane.showMessageDialog(null, "Error: Database not updated", "Error", JOptionPane.ERROR_MESSAGE); 
        }
        
        finally{
            this.disconnect();
        }
        
    }
    
    public void getID()
    {
        String tempQuery = "select max(loanid) as loanid from loan_hdr";
        
	Statement stmt = null;       
	this.connect();
	conn = this.getConnection();
                
	try
        {
            stmt = conn.createStatement();
        }
                
	catch (SQLException e)
        {
        }
		
	ResultSet rs;
	try
        {
            rs = stmt.executeQuery(tempQuery);
            if(rs.next())
            loanID = rs.getInt("loanid");
        }
        
        catch (SQLException e)
        {
            e.printStackTrace();
	}
        finally{
            this.disconnect();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addLoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addLoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addLoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addLoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { 
                new addLoan().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonCompute;
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JComboBox comboTypeOfLoan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labelAmortization;
    private javax.swing.JLabel labelMember;
    private javax.swing.JLabel labelTotalInterest;
    private javax.swing.JLabel labelTotalPayment;
    private javax.swing.JLabel labelTotalPrincipal;
    private javax.swing.JTextField textCheckNo;
    private javax.swing.JTextField textEndDate;
    private javax.swing.JTextField textInterest;
    private javax.swing.JTextField textPrincipal;
    private javax.swing.JTextField textStartDate;
    private javax.swing.JTextField textTerms;
    // End of variables declaration//GEN-END:variables
}
