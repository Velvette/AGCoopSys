/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package agcoopsys;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Acer
 */
public class viewReceipt extends javax.swing.JPanel {

    ConnectToDatabaseSys paramDB = new ConnectToDatabaseSys();
    public String dbUrl;
    public String dbDriver;
    public String username;
    public String password;
    public Connection conn;
    public Connection conn2;
    public String firstname;
    public String lastname;
    public int memberID;
    public String midinit;
    public DefaultListModel listModel = new DefaultListModel();
    String id, billid;

    public int orid, ordtlid;
    String orno;
    ArrayList<String> arrayOR = new ArrayList<>();
    ArrayList<String> arrayID = new ArrayList<>();
    ArrayList<String> arrayDTLID = new ArrayList<>();
    Object obj;
    boolean cl, reg, ed, cal, em, goods;
    float r, d, m, c;
    ConnectToDatabaseSys connectDB = new ConnectToDatabaseSys();
    ArrayList<ArrayList> arrayLoans;
    ArrayList<String> arrayTemp = new ArrayList<>();
    int clid, regid, edid, calid, emid;
    float fcont, fcl, freg, fed,  fcal,  fem, fgoods, ftotal ;
    String startDate, endDate;
    
    /**
     * Creates new form viewReceipt
     */
    public viewReceipt() {

        initComponents();
        listReceipt.setModel(listModel);
        listDetails.getTableHeader().setReorderingAllowed(false);
        //obj=arrayOR.clone();
        //jList1= new JList(arrayOR.toArray());
        //this.getListDetails(String.valueOf(orid));
        //this.getList();
        //this.getList();  
        this.arrayLoans = new ArrayList<>();
        cl=false; reg=false;ed=false;cal=false;em=false;



        
        
    }
    
    public void getList()
    {//System.out.println("in getlist");
        arrayDTLID= new ArrayList();
        String tempQuery = "SELECT orno, orid from or_hdr order by orno";
        
        listModel.clear();
        Statement stmt = null;       
        this.connect();
        conn = this.getConnection();
                
        try
        {
            stmt = conn.createStatement();
        }
                
        catch (SQLException e)
        {
            e.printStackTrace();
        }
		
        ResultSet rs;
        try
        {
            String orno;
            rs = stmt.executeQuery(tempQuery);
            while(rs.next())
            {                
                
                arrayOR.add(rs.getString(1));
                listModel.addElement(rs.getString(1));
                arrayID.add(rs.getString(2));
                //System.out.println("inOR getlist"+rs.getString(1));
            }
         
        //this.disconnect();      
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        finally{
            this.disconnect();
        }
    }

    public void connect()
    {//System.out.println("in connec");
        dbDriver = paramDB.getDbClass();
        dbUrl = paramDB.getDbUrl();
        password = paramDB.getPassword(); // CHANGE PASSWORD
        username = paramDB.getName();
                
        try
        {
            Class.forName(dbDriver).newInstance();
            conn = DriverManager.getConnection(dbUrl,username,password);
        }
        catch(ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException e)
        {
            e.printStackTrace();
        }
    }
	
    public Connection getConnection()
    {//System.out.println("in getconnection");
	return conn;
    }
	
    public void disconnect()
    {
       try
       {//System.out.println("in disconnect");
            conn.close();
       } 
       catch (Exception ex)
       {
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        textContribution = new javax.swing.JTextField();
        textCashloan = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        textRegloan = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        textEducloan = new javax.swing.JTextField();
        textCalloan = new javax.swing.JTextField();
        textEmerloan = new javax.swing.JTextField();
        textGoods = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        textTotal = new javax.swing.JTextField();
        buttonCompute = new javax.swing.JButton();
        buttonConfirm = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listReceipt = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDetails = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrame1.setMinimumSize(new java.awt.Dimension(450, 300));

        jLabel13.setText("Contribution");

        jLabel14.setText("Cash Loan");

        textContribution.setEnabled(false);

        textCashloan.setEnabled(false);

        jLabel15.setText("Regular Loan");

        textRegloan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textRegloanregLoanChanged(evt);
            }
        });

        jLabel16.setText("Educational Loan");

        jLabel17.setText("Calamity Loan");

        jLabel18.setText("Emergency Loan");

        jLabel19.setText("Goods");

        textEducloan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textEducloanedLoanChanged(evt);
            }
        });

        textCalloan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCalloancalLoanChanged(evt);
            }
        });

        textEmerloan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textEmerloanemLoanChanged(evt);
            }
        });

        textGoods.setEnabled(false);

        jLabel20.setText("Total");

        textTotal.setEnabled(false);

        buttonCompute.setText("Compute");
        buttonCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonComputeActionPerformed(evt);
            }
        });

        buttonConfirm.setText("Confirm");
        buttonConfirm.setEnabled(false);
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textContribution, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textCashloan, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textRegloan, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textEducloan, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(313, 313, 313))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textEmerloan, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textGoods, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                                .addComponent(textCalloan, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                                .addComponent(buttonCompute)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonConfirm)
                                .addContainerGap())))))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(textContribution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textCashloan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(textRegloan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(textEducloan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(textCalloan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(textEmerloan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textGoods, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(textTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCompute)
                    .addComponent(buttonConfirm))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setPreferredSize(new java.awt.Dimension(738, 435));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Receipts"));

        listReceipt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listReceiptMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listReceipt);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Receipt Details"));

        listDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(listDetails);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Receipt"));

        jLabel1.setText("COMPANY");

        jLabel2.setText("OR NUMBER");

        jLabel3.setText("DATE");

        jLabel4.setText("AMOUNT");

        jLabel5.setText("DETAIL");

        jLabel6.setText("BILL NUMBER");

        jLabel8.setText(" ");

        jLabel9.setText(" ");

        jLabel10.setText(" ");

        jLabel11.setText(" ");

        jLabel12.setText(" ");
        jLabel12.setToolTipText("");

        jButton1.setText(" Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(jButton1)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listReceiptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listReceiptMouseClicked

 /*       String tempQuery2 = "select memberid, contribution, cash_amount,reg_amount,educ_amount, calamity_amount, emer_amount, goods_amount, memtotal  from OR_DTL where ORID="+id;
        
        Statement stmt2 = null;
        this.connect();
        conn = this.getConnection();
        try
        {
            stmt2 = conn.createStatement();
        }
        
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        ResultSet rs;
        try
        {
            rs = stmt2.executeQuery(tempQuery2);
            listDetails.setModel(DbUtils.resultSetToTableModel(rs));
        }
        
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        finally{
            this.disconnect();
        }
        
        */
        try {
            id=arrayID.get(listReceipt.getSelectedIndex());
            System.out.println("in list receipt mouse clicked");
            String index = listReceipt.getSelectedValue().toString();//.getSelectedRow();
//            String i = listDetails.getValueAt(index, 0).toString();
//            this.getListDetails(i);
            String tempQuery = "select or_hdr.*, COMPANY.COMPNAME \n" +
                                "from or_hdr cross join company\n" +
                                "where or_hdr.compid=company.compid and orno="+index+"";
            String id=null;
            Statement stmt = null;
            this.connect();
            conn = this.getConnection();
            stmt = conn.createStatement();
            
            ResultSet rs2;
            
            rs2 = stmt.executeQuery(tempQuery);
            rs2.next();
            System.out.println(rs2.getString("orid"));
            jLabel7.setText(rs2.getString("compname"));
            jLabel8.setText(rs2.getString("orno"));
            jLabel9.setText(rs2.getString("ordt"));
            jLabel10.setText(rs2.getString("oramt"));
            jLabel11.setText(rs2.getString("ordetail"));
            jLabel12.setText(rs2.getString("billid"));
            billid=rs2.getString("billid");
            System.out.println("billid"+billid);
            id= rs2.getString("orid");
            getListDetails(id);
            this.disconnect();
            
           
        
        } catch (SQLException ex) {
            Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
                this.disconnect();
        }
    }//GEN-LAST:event_listReceiptMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if (listDetails.getSelectedRow()>=0){
            try {
                System.out.println("in edit");
                //editBillDtl edit= new editBillDtl(Integer.parseInt(arrayDTLID.get(listDetails.getSelectedRow())));
                
                /*edit.setVisible(true);
                edit.setLocationRelativeTo(null);
                edit.setTitle("Edit OR Details");
                */this.disconnect();
                jFrame1.setVisible(true);
                jFrame1.setLocationRelativeTo(null);
                jFrame1.setTitle("Edit OR Details"); System.out.println(id);
                
                
                    String query = "select * from bill_hdr where billid="+billid;

                ResultSet rs2;
                this.connect();
                Statement stmt = null;
           
                stmt = conn.createStatement();
                rs2 = stmt.executeQuery(query);
                rs2.next();
                startDate=rs2.getString("startdt");
                endDate=rs2.getString("enddt");
                System.out.println(query+startDate+endDate);
        this.disconnect();
        //this.getORDTLID();            
            } catch (SQLException ex) {
                Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
            }
            part2();
        }
        else{
            JOptionPane.showMessageDialog(null, "Error: Select row to edit", "Error - Edit information", JOptionPane.ERROR_MESSAGE); 
        
        }

    }//GEN-LAST:event_jButton1ActionPerformed
public void part2(){
    try{
                String tempQuery="Select * from or_dtl where ordtlid="+arrayDTLID.get(listDetails.getSelectedRow());
                System.out.println(tempQuery);
                Statement stmt = null;
                this.connect();
                conn = this.getConnection();
                stmt = conn.createStatement();
                
                ResultSet rs2;
                
                rs2 = stmt.executeQuery(tempQuery);
                rs2.next();
                
                textContribution.setText(rs2.getString("contribution"));
                textCashloan.setText(rs2.getString("cash_amount"));
                textRegloan.setText(rs2.getString("reg_amount"));
                textEducloan.setText(rs2.getString("educ_amount"));
                textEmerloan.setText(rs2.getString("emer_amount"));
                textCalloan.setText(rs2.getString("calamity_amount"));
                textGoods.setText(rs2.getString("goods_amount"));
                textTotal.setText(rs2.getString("memtotal"));
                this.disconnect();
                
                r=Float.parseFloat(textRegloan.getText());//Float.parseFloat(rs2.getString("reg_amount"));
                
                d=Float.parseFloat(textEducloan.getText());//Float.parseFloat(rs2.getString("educ_amount"));
                m=Float.parseFloat(textEmerloan.getText());//Float.parseFloat(rs2.getString("emer_amount"));
                c=Float.parseFloat(textCalloan.getText());//Float.parseFloat(rs2.getString("calamity_amount"));
                
                
            
}catch (SQLException ex) {
                Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
            }
                
                this.disconnect();
                
}
    private void textRegloanregLoanChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textRegloanregLoanChanged
        // TODO add your handling code here:
        System.out.println("pindot");
        reg=true;
    }//GEN-LAST:event_textRegloanregLoanChanged

    private void textEducloanedLoanChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textEducloanedLoanChanged
        // TODO add your handling code here:
        ed=true;
    }//GEN-LAST:event_textEducloanedLoanChanged

    private void textCalloancalLoanChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCalloancalLoanChanged
        // TODO add your handling code here:
        cal=true;
    }//GEN-LAST:event_textCalloancalLoanChanged

    private void textEmerloanemLoanChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textEmerloanemLoanChanged
        // TODO add your handling code here:
        em=true;
    }//GEN-LAST:event_textEmerloanemLoanChanged

    private void buttonComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonComputeActionPerformed
        // TODO add your handling code here:
        Double total,a,b,c,d,e,f,g,h;
        /*a=Double.parseDouble(jTextField1.getText());
        b=Double.parseDouble(jTextField2.getText());
        c=Double.parseDouble(jTextField3.getText());
        d=Double.parseDouble(jTextField4.getText());
        e=Double.parseDouble(jTextField5.getText());
        f=Double.parseDouble(jTextField6.getText());
        g=Double.parseDouble(jTextField7.getText());*/
        if(textContribution.getText().length()<=0)//.isEmpty())
        a=0.0;
        else
        a=Double.parseDouble(textContribution.getText());
        if(textCashloan.getText().length()<=0)//.isEmpty())
        b=0.0;
        else
        b=Double.parseDouble(textCashloan.getText());
        if(textRegloan.getText().length()<=0)//.isEmpty())
        c=0.0;
        else
        c=Double.parseDouble(textRegloan.getText());
        if(textEducloan.getText().length()<=0)//.isEmpty())
        d=0.0;
        else
        d=Double.parseDouble(textEducloan.getText());
        if(textCalloan.getText().length()<=0)//.isEmpty())
        e=0.0;
        else
        e=Double.parseDouble(textCalloan.getText());
        if(textEmerloan.getText().length()<=0)//.isEmpty())
        f=0.0;
        else
        f=Double.parseDouble(textEmerloan.getText());
        if(textGoods.getText().length()<=0)//.isEmpty())
        g=0.0;
        else
        g=Double.parseDouble(textGoods.getText());
        total=a+b+c+d+e+f+g;
        textTotal.setText(total.toString());
        buttonConfirm.setEnabled(true);
    }//GEN-LAST:event_buttonComputeActionPerformed

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed
        // TODO add your handling code here:
        {
            String query3;
            if(reg  ){
                try {
                    String query = "select * from bill_dtl where billid="+billid;
                    
                    ResultSet rs;
                    this.connect();
                    Statement stmt = null;
                    
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(query);
                    rs.next();
                    arrayLoans.add(subledger1("reg", rs.getString("reg_loanid"), Float.parseFloat(rs.getString("reg_amount"))));
                    System.out.println("reg");
                    this.disconnect();
                } catch (SQLException ex) {
                    Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(ed  ){
                try {
                    String query = "select * from bill_dtl where billid="+billid;
                    
                    ResultSet rs;
                    this.connect();
                    Statement stmt = null;
                    
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(query);
                    rs.next();
                    arrayLoans.add(subledger1("ed", rs.getString("educ_loanid"), Float.parseFloat(rs.getString("educ_amount"))));
                    this.disconnect();
                } catch (SQLException ex) {
                    Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
                }System.out.println("ed");
            }
            if(cal  ){
               try {
                    String query = "select * from bill_dtl where billid="+billid;
                    
                    ResultSet rs;
                    this.connect();
                    Statement stmt = null;
                    
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(query);
                    rs.next();
                    arrayLoans.add(subledger1("ed", rs.getString("educ_loanid"), Float.parseFloat(rs.getString("educ_amount"))));
                    this.disconnect();
                } catch (SQLException ex) {
                    Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
                }System.out.println("cal");
            }
            if(em ){
                try {
                    String query = "select * from bill_dtl where billid="+billid;
                    
                    ResultSet rs;
                    this.connect();
                    Statement stmt = null;
                    
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(query);
                    rs.next();
                    arrayLoans.add(subledger1("ed", rs.getString("educ_loanid"), Float.parseFloat(rs.getString("educ_amount"))));
                    this.disconnect();
                } catch (SQLException ex) {
                    Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
                }System.out.println("em");
            }
  
            this.subledger2(arrayLoans);
            for(int i=0; i<arrayLoans.size(); i++){
                arrayTemp=arrayLoans.get(i);

                if(arrayTemp.get(0).matches("reg")){
                    /*query3 = "insert into subledger_reg(ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                            + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                    paramDB.accessLoopDatabase(query3);*/
                    query3= "update subledger_reg set mon_premium_prev="+arrayTemp.get(3)+", mon_interest_prev="+arrayTemp.get(4)+", mon_premium_pay="+arrayTemp.get(5)+", mon_interest_pay="+arrayTemp.get(6)+
                            " where loandtlid="+arrayTemp.get(2);
                    paramDB.accessLoopDatabase(query3);
                }
                else if(arrayTemp.get(0).matches("ed")){
                    /*query3 = "insert into subledger_educ(ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                            + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                    paramDB.accessLoopDatabase(query3);*/
                    query3= "update subledger_educ set mon_premium_prev="+arrayTemp.get(3)+", mon_interest_prev="+arrayTemp.get(4)+", mon_premium_pay="+arrayTemp.get(5)+", mon_interest_pay="+arrayTemp.get(6)+
                            " where loandtlid="+arrayTemp.get(2);
                    paramDB.accessLoopDatabase(query3);
                }
                else if(arrayTemp.get(0).matches("cal")){
            System.out.println("2size"+arrayTemp.size());
                    /*query3 = "insert into subledger_cal (ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                            + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                    paramDB.accessLoopDatabase(query3);   */
                    query3= "update subledger_cal set mon_premium_prev="+arrayTemp.get(3)+", mon_interest_prev="+arrayTemp.get(4)+", mon_premium_pay="+arrayTemp.get(5)+", mon_interest_pay="+arrayTemp.get(6)+
                            " where loandtlid="+arrayTemp.get(2);
                    paramDB.accessLoopDatabase(query3);
                    System.out.println("in calinsert"+ordtlid+" "+arrayTemp.get(1)+" "+arrayTemp.get(2)+" "+arrayTemp.get(3)+" "+arrayTemp.get(4)+" "+arrayTemp.get(5)+" "+arrayTemp.get(6));
                }
                else if(arrayTemp.get(0).matches("em")){
                    /*query3 = "insert into subledger_emer(ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                            + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                    paramDB.accessLoopDatabase(query3);*/
                    query3= "update subledger_emer set mon_premium_prev="+arrayTemp.get(3)+", mon_interest_prev="+arrayTemp.get(4)+", mon_premium_pay="+arrayTemp.get(5)+", mon_interest_pay="+arrayTemp.get(6)+
                            " where loandtlid="+arrayTemp.get(2);
                    paramDB.accessLoopDatabase(query3);
                }
            }
            //float ortotal=fcont+cl+reg+em+cal+ed+goods;
            //query3 = "Update or_dtl set memtotal="+ortotal +"where ordtlid="+ordtlid; 
            //  connectDB.accessLoopDatabase(query3);

        }
    }//GEN-LAST:event_buttonConfirmActionPerformed

    public ArrayList subledger1(String type, String loanid, float amount)
    {        //get all details subledger needs
        arrayTemp= new ArrayList();
        String query = "select * from loan_dtl where loanid="+loanid+" and amordate between to_date('"+startDate.substring(0, 10) +"','yyyy-mm-dd') and to_date('"+endDate.substring(0, 10)+"','yyyy-mm-dd') ";
        
        ResultSet rs;
        this.connect();
        Statement stmt = null;
        String premium_prev, interest_prev, penalty_prev;
       float premium, interest, penalty ;
       
        try
        {
            stmt = conn.createStatement();
            rs = stmt.executeQuery(query);
            rs.next();
            System.out.println("in sub1 while"+loanid+" "+rs.getString("mon_interest"));
                interest_prev=rs.getString("mon_interest");
                premium_prev=rs.getString("mon_premium");
                interest=rs.getFloat("mon_interest");
                premium=rs.getFloat("mon_premium");
                //penalty_prev=rs.getString("mon_penalty_prev");
                if(amount-rs.getFloat("mon_interest")-rs.getFloat("mon_premium")==0)
                {
                    premium=0;
                    interest=0;
                }
                else if(interest+premium>amount)
                {
                    //interest=-amount;
                    if(amount-interest==0){//equals intereset
                        premium=rs.getFloat("mon_premium");
                        interest=0;
                    }
                    else if (amount-interest<0)//less than interest
                    {
                        premium=rs.getFloat("mon_premium");;
                        interest-=amount;
                    }
                    else if (amount-interest>0)//greater than interest
                    {
                        interest=0;
                        if(amount-interest<premium)//less than premium
                            premium-=(amount-interest);
                    }
                
                
            }
                arrayTemp.add(type);
                //arrayTemp.add(ordtlid);
                arrayTemp.add(rs.getString("loanid"));
                arrayTemp.add(rs.getString("loandtlid"));
                arrayTemp.add(rs.getString("mon_premium"));
                arrayTemp.add(rs.getString("mon_interest"));
                //arrayTemp.add(rs.getString("mon_penalty"));
                arrayTemp.add(String.valueOf(premium));
                arrayTemp.add(String.valueOf(interest));
                //arrayTemp.add(String.valueOf(penalty));
	}
        
        catch (SQLException e)
        {
            e.printStackTrace();
	}   
        finally{
            this.disconnect();
        }
       
        return arrayTemp;
    }
    
    private void subledger2(ArrayList<ArrayList> arrayL) {
        String query3;
        System.out.println("sub2size"+arrayL.size());
        for(int i=0; i<arrayL.size(); i++){
            arrayTemp=arrayL.get(i);
            
            if(arrayTemp.get(0).matches("reg")){
                /*query3 = "insert into subledger_reg(ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                        + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                paramDB.accessLoopDatabase(query3);*/
                query3= "update loan_dtl set mon_premium_bal=mon_premium_bal-"+arrayTemp.get(5)+", mon_interest_bal=mon_interest_bal-"+arrayTemp.get(6)+
                        " where loandtlid="+arrayTemp.get(2);
                paramDB.accessLoopDatabase(query3);
            }
            else if(arrayTemp.get(0).matches("ed")){
                /*query3 = "insert into subledger_educ(ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                        + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                paramDB.accessLoopDatabase(query3);*/
                query3= "update loan_dtl set mon_premium_bal=mon_premium_bal-"+arrayTemp.get(5)+", mon_interest_bal=mon_interest_bal-"+arrayTemp.get(6)+
                        " where loandtlid="+arrayTemp.get(2);
                paramDB.accessLoopDatabase(query3);
            }
            else if(arrayTemp.get(0).matches("cal")){
        System.out.println("2size"+arrayTemp.size());
                /*query3 = "insert into subledger_cal (ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                        + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                paramDB.accessLoopDatabase(query3);   */
                query3= "update loan_dtl set mon_premium_bal=mon_premium_bal-"+arrayTemp.get(5)+", mon_interest_bal=mon_interest_bal-"+arrayTemp.get(6)+
                        " where loandtlid="+arrayTemp.get(2);
                paramDB.accessLoopDatabase(query3);
                System.out.println("in calinsert"+ordtlid+" "+arrayTemp.get(1)+" "+arrayTemp.get(2)+" "+arrayTemp.get(3)+" "+arrayTemp.get(4)+" "+arrayTemp.get(5)+" "+arrayTemp.get(6));
            }
            else if(arrayTemp.get(0).matches("em")){
                /*query3 = "insert into subledger_emer(ordtlid, loanid, loandtlid, mon_premium_prev, mon_interest_prev, premium_pay, interest_pay) "
                        + "values('"+ordtlid+"', '"+arrayTemp.get(1)+"', '"+arrayTemp.get(2)+"', '"+arrayTemp.get(3)+"', '"+arrayTemp.get(4)+"', '"+arrayTemp.get(5)+"', '"+arrayTemp.get(6)+"')";
                paramDB.accessLoopDatabase(query3);*/
                query3= "update loan_dtl set mon_premium_bal=mon_premium_bal-"+arrayTemp.get(5)+", mon_interest_bal=mon_interest_bal-"+arrayTemp.get(6)+
                        " where loandtlid="+arrayTemp.get(2);
                paramDB.accessLoopDatabase(query3);
            }
        }
    }

    public void getORDTLID()
    {
        
        
        
        String query = "select * from loan_dtl where amordate between to_date('"+startDate.substring(0, 10)+"','yyyy-mm-dd') and to_date('"+endDate.substring(0, 10)+"','yyyy-mm-dd') ";
        
        ResultSet rs;
        this.connect();
        Statement stmt = null;
        String premium_prev, interest_prev, penalty_prev;
       float premium, interest, penalty ;
       try{
        stmt = conn.createStatement();
        rs = stmt.executeQuery(query);
        rs.next();
        rs.getInt("loandtlid");
       }
/*
        String tempQuery = "select max(ordtlid) as ordtlid from or_dtl";
        
	Statement stmt = null;       
	this.connect();
	conn = this.getConnection();
	ResultSet rs;
	try
        {
            stmt = conn.createStatement();
            rs = stmt.executeQuery(tempQuery);
            if(rs.next())
            ordtlid = rs.getInt("ordtlid");
        }
        */
        catch (SQLException e)
        {
            e.printStackTrace();
	}
        finally{
            this.disconnect();
        }
    }
    public void getListDetails(String id)
    {
        
        try
        {

            System.out.println("in list details"+id);
            String tempQuery = "select member.lastname ||', '|| MEMBER.firstname ||' '|| member.midinit as membername, or_dtl.contribution, or_dtl.cash_amount as CASH_LOAN, or_dtl.reg_amount AS REGULAR_LOAN, or_dtl.educ_amount AS EDUCATIONAL_LOAN, or_dtl.calamity_amount AS CALAMITY_LOAN, or_dtl.emer_amount AS EMERGENCY_LOAN, or_dtl.goods_amount AS GOODS, or_dtl.memtotal AS TOTAL  \n" +
                                "from or_dtl cross join member\n" +
                                "where OR_DTL.MEMBERID=MEMBER.MEMBERID and orid="+id+" ORDER BY MEMBERNAME";
            String tempQuery2="select member.lastname ||', '|| MEMBER.firstname ||' '|| member.midinit as membername, or_dtl.*  \n" +
                                "from or_dtl cross join member\n" +
                                "where OR_DTL.MEMBERID=MEMBER.MEMBERID and orid="+id+" ORDER BY MEMBERNAME";
            Statement stmt = null;
            this.connect();
            conn = this.getConnection();
            Statement stmt2 = null;
            this.connect();
            conn2 = this.getConnection();

            try
            {
                stmt = conn.createStatement();
                stmt2 = conn2.createStatement();
            }

            catch (SQLException e)
            {
                e.printStackTrace();
            }

            ResultSet rs;
            ResultSet rs2;
            try
            {
                rs = stmt.executeQuery(tempQuery);
                listDetails.setModel(DbUtils.resultSetToTableModel(rs));
                rs2= stmt2.executeQuery(tempQuery2);
                while(rs2.next())
                {
                    arrayDTLID.add(rs2.getString("ordtlid"));
                }
                    
            }

            catch (SQLException e)
            {
                e.printStackTrace();
            }
            finally{
                this.disconnect();
            }
        }

        catch(Exception e)
        {

        }
        
        
        
        
        
        
        
        
        
        /*
            Statement stmt = null;System.out.println("in getlistdetails"+id);
            String tempQuery = "select memberid, contribution, cash_amount,reg_amount,educ_amount, calamity_amount, emer_amount, goods_amount, memtotal  from or_dtl where orid="+id;
            
        try {
            //tempQuery="select * from or_dtl where orid="+id;
            
            this.connect();
            conn = this.getConnection();
            stmt = conn.createStatement();
            
        } catch (SQLException ex) {
            Logger.getLogger(viewReceipt.class.getName()).log(Level.SEVERE, null, ex);
        }
            ResultSet rs3;
try
            {
                rs3 = stmt.executeQuery(tempQuery);
                listDetails.setModel(DbUtils.resultSetToTableModel(rs3));
            }

            catch (SQLException e)
            {
                e.printStackTrace();
            }
            finally{
                this.disconnect();
            }*/
    }
    public void deleteReceipt()
    {
        try
        {
            id = arrayID.get(listReceipt.getSelectedIndex());//.getSelectedValue().toString();
            System.out.println("delete"+id);
            String query = "delete from or_hdr where orid ="+id;
            String query2 = "delete from or_dtl where orid ="+id;
            ConnectToDatabaseSys connectDB = new ConnectToDatabaseSys();
            connectDB.accessLoopDatabase(query);
            connectDB.accessLoopDatabase(query2);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: Select row to delete", "Error", JOptionPane.ERROR_MESSAGE); 
        }
        finally{
            this.disconnect();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCompute;
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable listDetails;
    private javax.swing.JList listReceipt;
    private javax.swing.JTextField textCalloan;
    private javax.swing.JTextField textCashloan;
    private javax.swing.JTextField textContribution;
    private javax.swing.JTextField textEducloan;
    private javax.swing.JTextField textEmerloan;
    private javax.swing.JTextField textGoods;
    private javax.swing.JTextField textRegloan;
    private javax.swing.JTextField textTotal;
    // End of variables declaration//GEN-END:variables
}
